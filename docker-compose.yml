version: '3.8'

services:
  veridoc-ai:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
    volumes:
      - ./uploads:/app/uploads
      - ./api.txt:/app/api.txt:ro
      - ./.index_cache:/app/.index_cache
      - ./.ask_me_cache:/app/.ask_me_cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add Redis for caching if needed
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

  # Optional: Add PostgreSQL for persistent storage if needed
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: veridoc
  #     POSTGRES_USER: veridoc_user
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-veridoc_password}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

volumes:
  # redis_data:
  # postgres_data:
